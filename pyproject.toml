[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "how-to-cli"
version = "0.0.2"
description = "Ask LLMs how to do anything with terminal commands"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "How To CLI Contributors", email = "hello@how-to-cli.com"}
]
maintainers = [
    {name = "How To CLI Contributors", email = "hello@how-to-cli.com"}
]
keywords = ["cli", "llm", "terminal", "commands", "ai", "automation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Terminals",
    "Topic :: Utilities",
]
requires-python = ">=3.8"
dependencies = [
    "click>=8.1.0",
    "requests>=2.31.0",
    "pyyaml>=6.0",
    "rich>=13.0.0",
    "colorama>=0.4.6",
    # Optional dependencies for enhanced features
    "keyring>=24.0.0; python_version>='3.8'",
    "pyperclip>=1.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-mock>=3.11.0",
    "pytest-cov>=4.1.0",
    "responses>=0.23.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
]
security = [
    "keyring>=24.0.0",
]
performance = [
    "aiofiles>=23.0.0",
    "aiosqlite>=0.19.0",
]

[project.urls]
Homepage = "https://github.com/patryk-porebski/how-to-cli"
Repository = "https://github.com/patryk-porebski/how-to-cli"
Documentation = "https://how-to-cli.readthedocs.io"
"Bug Tracker" = "https://github.com/patryk-porebski/how-to-cli/issues"
Changelog = "https://github.com/patryk-porebski/how-to-cli/blob/main/CHANGELOG.md"

[project.scripts]
how = "how:cli"

[tool.setuptools]
py-modules = [
    "how",
    "config", 
    "openrouter_client",
    "executor",
    "interactive",
    "parameters",
    "interactive_helper",
    "logger",
    "constants",
    "exceptions",
    "security",
    "session",
    "history",
    "cache",
    "streaming",
    "background"
]

[tool.setuptools.package-data]
"" = ["completions/*"]

# Black code formatter settings
[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.pytest_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort import sorting settings
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# mypy type checking settings
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# pytest settings
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--cov=.",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage settings
[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "setup.py",
    ".venv/*",
    "venv/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
